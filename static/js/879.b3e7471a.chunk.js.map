{"version":3,"file":"static/js/879.b3e7471a.chunk.js","mappings":"uLACA,EAAuB,uBAAvB,EAA6D,+B,SCyC7D,EA/BoC,SAAC,GAAD,IAAGA,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,IAAKC,EAAxB,EAAwBA,YAAxB,OAClC,gBACEC,UAAWC,EACXC,QAAS,WACPH,GAAeA,EAAYH,EAC5B,EAJH,WAME,0BACE,gBAAKO,IAAKP,EAAMQ,aAAcC,IAAKT,EAAMU,eAG3C,iBAAKN,UAAWC,EAAhB,WACE,0BACE,wBAAKL,EAAMU,eAEb,yBAAMV,EAAMW,cACZ,yBAAMX,EAAMY,oBAGbX,GAAWD,EAAMa,aAAeX,IAC/B,kBAAME,UAAU,eAAhB,WACE,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,kBAzBY,C,0FCVpC,EAAuB,0B,SCyCvB,EA7B0C,SAAC,GAMpC,IALLU,EAKI,EALJA,OACAb,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAa,EAEI,EAFJA,YACAC,EACI,EADJA,QAEA,SAASb,EAAYH,GACnBe,EAAYf,GACRiB,OAAOC,YAAc,KACvBF,EAAQhB,EAEX,CAED,OACE,eAAII,UAAWC,EAAf,SACGS,EAAOK,KAAI,SAACnB,GAAD,OACV,SAACoB,EAAA,EAAD,CAEEpB,MAAOA,EACPC,QAASA,EACTC,IAAKA,EACLC,YAAaA,GAJRH,EAAMqB,QAFH,KAWjB,C","sources":["webpack://itunes-music-player-react/./src/components/TrackRow/TrackRow.module.css?bbe2","components/TrackRow/TrackRow.tsx","webpack://itunes-music-player-react/./src/components/TracksTable/TracksTable.module.css?e1eb","components/TracksTable/TracksTable.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TrackRow_item__dQbkH\",\"item-content\":\"TrackRow_item-content__hGesL\"};","import React, { FC } from \"react\";\nimport { ItunesTrack } from \"../../interfaces/ItunesSearchResult\";\nimport styles from \"./TrackRow.module.css\";\n\ninterface TrackRowProps {\n  track: ItunesTrack;\n  playing: boolean;\n  url: string | undefined;\n  selectTrack: (track: ItunesTrack) => void | undefined;\n}\n\nconst TrackRow: FC<TrackRowProps> = ({ track, playing, url, selectTrack }) => (\n  <li\n    className={styles.item}\n    onClick={() => {\n      selectTrack && selectTrack(track);\n    }}\n  >\n    <div>\n      <img src={track.artworkUrl60} alt={track.trackName} />\n    </div>\n\n    <div className={styles[\"item-content\"]}>\n      <div>\n        <em>{track.trackName}</em>\n      </div>\n      <div>{track.artistName}</div>\n      <div>{track.collectionName}</div>\n    </div>\n\n    {playing && track.previewUrl === url && (\n      <span className=\"boxContainer\">\n        <span className=\"box box1\"></span>\n        <span className=\"box box2\"></span>\n        <span className=\"box box3\"></span>\n        <span className=\"box box4\"></span>\n        <span className=\"box box5\"></span>\n      </span>\n    )}\n  </li>\n);\n\nexport default TrackRow;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TracksTable_list__NEhv7\"};","import React, { FC } from \"react\";\nimport { ItunesTrack } from \"../../interfaces/ItunesSearchResult\";\nimport TrackRow from \"../TrackRow/TrackRow\";\nimport styles from \"./TracksTable.module.css\";\n\ninterface TracksTableProps {\n  tracks: ItunesTrack[];\n  playing: boolean;\n  url: string | undefined;\n  setSelected: React.Dispatch<React.SetStateAction<ItunesTrack | undefined>>;\n  setPlay: React.Dispatch<React.SetStateAction<ItunesTrack | undefined>>;\n}\n\nconst TracksTable: FC<TracksTableProps> = ({\n  tracks,\n  playing,\n  url,\n  setSelected,\n  setPlay,\n}) => {\n  function selectTrack(track: ItunesTrack): void {\n    setSelected(track);\n    if (window.innerWidth <= 768) {\n      setPlay(track);\n    }\n  }\n\n  return (\n    <ul className={styles.list}>\n      {tracks.map((track) => (\n        <TrackRow\n          key={track.trackId}\n          track={track}\n          playing={playing}\n          url={url}\n          selectTrack={selectTrack}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TracksTable;\n"],"names":["track","playing","url","selectTrack","className","styles","onClick","src","artworkUrl60","alt","trackName","artistName","collectionName","previewUrl","tracks","setSelected","setPlay","window","innerWidth","map","TrackRow","trackId"],"sourceRoot":""}