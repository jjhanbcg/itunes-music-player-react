{"version":3,"file":"static/js/779.d5642b1c.chunk.js","mappings":"wMACA,EAA2B,gCAA3B,EAAoE,8BAApE,EAA+G,kCAA/G,EAA0J,8BAA1J,EAA+L,4BAA/L,EAAmO,6BAAnO,EAAgR,qCAAhR,EAAqU,qC,SCoCrU,EA1B8C,SAAC,GAAD,IAC5CA,EAD4C,EAC5CA,MACAC,EAF4C,EAE5CA,WACAC,EAH4C,EAG5CA,QACAC,EAJ4C,EAI5CA,IAJ4C,OAM5C,gBAAKC,UAAWC,EAAhB,UACE,oBACEC,KAAK,SACLF,UAAS,UAAKC,EAAL,cACLH,GAAWF,EAAMO,aAAeJ,IAAQE,GAE5CG,QAAS,WACPP,EAAWD,EACZ,EAPH,WASE,kBAAMI,UAAWC,EAAjB,WACE,iBAAMD,UAAS,yBAAoBC,GAAnC,2BACA,iBAAMD,UAAS,yBAAoBC,GAAnC,yBAEF,iBAAMD,UAAWC,KACjB,iBAAMD,UAAWC,QArBuB,C,oGCV9C,GAAgB,WAAa,sCAAsC,SAAW,oCAAoC,KAAO,iC,SCoDzH,EAtCsD,SAAC,GAAD,IACpDL,EADoD,EACpDA,MACAS,EAFoD,EAEpDA,OACAR,EAHoD,EAGpDA,WACAC,EAJoD,EAIpDA,QACAC,EALoD,EAKpDA,IACAO,EANoD,EAMpDA,YANoD,OAQpD,iBAAKN,UAAWC,EAAAA,WAAhB,WACE,gBACED,UAAWC,EAAAA,MACXM,IAAKX,EAAMY,cACXC,IAAKb,EAAMc,aAGb,gBAAKV,UAAWC,EAAAA,SAAhB,UACE,SAACU,EAAA,QAAD,CACEf,MAAOA,EACPC,WAAYA,EACZC,QAASA,EACTC,IAAKA,OAIT,eAAIC,UAAWC,EAAAA,KAAf,SACGI,EAAOO,KAAI,SAAChB,GAAD,OACV,SAACiB,EAAA,EAAD,CAEEjB,MAAOA,EACPkB,YAAaR,EACbR,QAASA,EACTC,IAAKA,GAJAH,EAAMmB,QAFH,QAzBoC,C,mECdtD,EAAuB,uBAAvB,EAA6D,+B,SCyC7D,EA/BoC,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAOE,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,IAAKe,EAAxB,EAAwBA,YAAxB,OAClC,gBACEd,UAAWC,EACXG,QAAS,WACPU,GAAeA,EAAYlB,EAC5B,EAJH,WAME,0BACE,gBAAKW,IAAKX,EAAMoB,aAAcP,IAAKb,EAAMc,eAG3C,iBAAKV,UAAWC,EAAhB,WACE,0BACE,wBAAKL,EAAMc,eAEb,yBAAMd,EAAMqB,cACZ,yBAAMrB,EAAMsB,oBAGbpB,GAAWF,EAAMO,aAAeJ,IAC/B,kBAAMC,UAAU,eAAhB,WACE,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,cAChB,iBAAMA,UAAU,kBAzBY,C","sources":["webpack://itunes-music-player-react/./src/components/TrackControls/TrackControls.module.css?9c56","components/TrackControls/TrackControls.tsx","webpack://itunes-music-player-react/./src/components/TrackDetailsTable/TrackDetailsTable.module.css?e6ae","components/TrackDetailsTable/TrackDetailsTable.tsx","webpack://itunes-music-player-react/./src/components/TrackRow/TrackRow.module.css?bbe2","components/TrackRow/TrackRow.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"controls\":\"TrackControls_controls__sd74R\",\"circle\":\"TrackControls_circle__OkxnA\",\"circle_btn\":\"TrackControls_circle_btn__9DLEh\",\"paused\":\"TrackControls_paused__23JSL\",\"play\":\"TrackControls_play__eQzji\",\"pause\":\"TrackControls_pause__QWgwa\",\"circle_back-1\":\"TrackControls_circle_back-1__QMpp8\",\"circle_back-2\":\"TrackControls_circle_back-2__0R1Om\",\"waves\":\"TrackControls_waves__Tu+sY\"};","import React, { FC } from \"react\";\nimport { ItunesTrack } from \"../../interfaces/ItunesSearchResult\";\nimport styles from \"./TrackControls.module.css\";\n\ninterface TrackControlsProps {\n  track: ItunesTrack;\n  playing: boolean;\n  url: string | undefined;\n  togglePlay: (track: ItunesTrack) => void | undefined;\n}\n\nconst TrackControls: FC<TrackControlsProps> = ({\n  track,\n  togglePlay,\n  playing,\n  url,\n}) => (\n  <div className={styles.controls}>\n    <button\n      type=\"button\"\n      className={`${styles.circle} ${\n        (!playing || track.previewUrl !== url) && styles.paused\n      }`}\n      onClick={() => {\n        togglePlay(track);\n      }}\n    >\n      <span className={styles[\"circle_btn\"]}>\n        <span className={`material-icons ${styles.play}`}> play_arrow </span>\n        <span className={`material-icons ${styles.pause}`}> pause </span>\n      </span>\n      <span className={styles[\"circle_back-1\"]}></span>\n      <span className={styles[\"circle_back-2\"]}></span>\n    </button>\n  </div>\n);\n\nexport default TrackControls;\n","// extracted by mini-css-extract-plugin\nexport default {\"collection\":\"TrackDetailsTable_collection__5Qsv2\",\"controls\":\"TrackDetailsTable_controls__6wym2\",\"list\":\"TrackDetailsTable_list__R8iJp\"};","import React, { FC } from \"react\";\nimport { ItunesTrack } from \"../../interfaces/ItunesSearchResult\";\nimport TrackControls from \"../TrackControls/TrackControls\";\nimport TrackRow from \"../TrackRow/TrackRow\";\nimport styles from \"./TrackDetailsTable.module.css\";\n\ninterface TrackDetailsTableProps {\n  track: ItunesTrack;\n  togglePlay: (track: ItunesTrack) => void | undefined;\n  playing: boolean;\n  url: string | undefined;\n  tracks: ItunesTrack[];\n  setSelected: (track: ItunesTrack) => void | undefined;\n}\n\nconst TrackDetailsTable: FC<TrackDetailsTableProps> = ({\n  track,\n  tracks,\n  togglePlay,\n  playing,\n  url,\n  setSelected,\n}) => (\n  <div className={styles.collection}>\n    <img\n      className={styles.cover}\n      src={track.artworkUrl100}\n      alt={track.trackName}\n    />\n\n    <div className={styles.controls}>\n      <TrackControls\n        track={track}\n        togglePlay={togglePlay}\n        playing={playing}\n        url={url}\n      />\n    </div>\n\n    <ul className={styles.list}>\n      {tracks.map((track) => (\n        <TrackRow\n          key={track.trackId}\n          track={track}\n          selectTrack={setSelected}\n          playing={playing}\n          url={url}\n        />\n      ))}\n    </ul>\n  </div>\n);\n\nexport default TrackDetailsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TrackRow_item__dQbkH\",\"item-content\":\"TrackRow_item-content__hGesL\"};","import React, { FC } from \"react\";\nimport { ItunesTrack } from \"../../interfaces/ItunesSearchResult\";\nimport styles from \"./TrackRow.module.css\";\n\ninterface TrackRowProps {\n  track: ItunesTrack;\n  playing: boolean;\n  url: string | undefined;\n  selectTrack: (track: ItunesTrack) => void | undefined;\n}\n\nconst TrackRow: FC<TrackRowProps> = ({ track, playing, url, selectTrack }) => (\n  <li\n    className={styles.item}\n    onClick={() => {\n      selectTrack && selectTrack(track);\n    }}\n  >\n    <div>\n      <img src={track.artworkUrl60} alt={track.trackName} />\n    </div>\n\n    <div className={styles[\"item-content\"]}>\n      <div>\n        <em>{track.trackName}</em>\n      </div>\n      <div>{track.artistName}</div>\n      <div>{track.collectionName}</div>\n    </div>\n\n    {playing && track.previewUrl === url && (\n      <span className=\"boxContainer\">\n        <span className=\"box box1\"></span>\n        <span className=\"box box2\"></span>\n        <span className=\"box box3\"></span>\n        <span className=\"box box4\"></span>\n        <span className=\"box box5\"></span>\n      </span>\n    )}\n  </li>\n);\n\nexport default TrackRow;\n"],"names":["track","togglePlay","playing","url","className","styles","type","previewUrl","onClick","tracks","setSelected","src","artworkUrl100","alt","trackName","TrackControls","map","TrackRow","selectTrack","trackId","artworkUrl60","artistName","collectionName"],"sourceRoot":""}